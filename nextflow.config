manifest {
	name = 'NZ FOG'
	author = 'Guillermo A.R. Piccoli'
	homePage = 'https://www.epicsolutions.cl'
	description = 'Pipeline for NZ Flat Oyster Genetic Analises'
	version = '1.0.0'
}

executor{
    jobName = { "$task.tag" }
}

params {
    projectName = "fog"
	input = "input"
    outdir = "output"
	genomeSize = "1g"
	bio = "quay.io/biocontainers"
	fog = "shub://kiwiepic"
	index = "4G"
}

singularity {
	enabled = true
	autoMounts = true
	cacheDir = "work/singularity"
}

//docker.enabled = true

process {
	withName: '.*_no-mount_.*' {
		singularity {
			runOptions = '--no-mount=tmp'
		}
	}	
	withName: 'pbmm2_.*' {
		container = "$params.bio/pbmm2:1.4.0--h56fc30b_0"
	}
	withName: 'samtools_.*' {
		container = "$params.bio/samtools:1.11--h6270b1f_0"
	}
	withName: 'gnuplot_.*' {
		container = "$params.fog/gnuplot:latest"
	}
}

profiles {
	local {
		params.genomeSize = '1m'
		process{
			executor = 'local'
			memory = 24.GB
			cpus = 12
			withName: pbipa {
				cpus = 10
			}
		}
	}
    rapoi {
		process {
			executor = 'slurm'
			withName: pbbam {
				memory = 1.GB
				cpus = 1
				time = '1h'
				queue = 'quicktest'
			}
			withName: bam2fastx {
				memory = 10.GB
				cpus = 2
				time = '1h'
				queue = 'quicktest'
			}
			withName: fastqc {
				memory = 10.GB
				cpus = 12
				time = '1h'
				queue = 'parallel'
			}
			withName: multiqc {
				memory = 10.GB
				cpus = 2
				time = '1h'
				queue = 'quicktest'
			}
			withName: 'pbmm2_i.*' {
				memory = 20.GB
				cpus = 4
				time = '1h'
				queue = 'quicktest'
			}
			withName: 'pbmm2_m.*' {
				memory = 80.GB
				cpus = 48
				time = '6h'
				queue = 'parallel'
			}
			withName: 'samtools.*' {
				memory = 80.GB
				cpus = 48
				time = '5d'
				queue = 'bigmem'
			}
			withName: canu {
				memory = 80.GB
				cpus = 48
				time = '5d'
				queue = 'bigmem'
			}
			withName: peregrine {
				memory = 500.GB
				cpus = 48
				time = '5d'
				queue = 'bigmem'
			}
			withName: hifiasm {
				memory = 50.GB
				//mem = 8 * threads + 9
				cpus = 64
				time = '1d'
				queue = 'parallel'
			}
			withName: post_hifiasm{
				memory = 20.GB
				cpus = 4
				time = '1h'
				queue = 'quicktest'
			}
			withName: pbipa {
				memory = 100.GB
				cpus = 64
				time = '5d'
				queue = 'parallel'
			}
			withName: flye {
				memory = 100.GB
				cpus = 64
				time = '5d'
				queue = 'parallel'
			}
			withName: nextdenovo {
				memory = 500.GB
				cpus = 48
				time = '5d'
				queue = 'bigmem'
			}
			withName: pb_assembly {
				container = "${params.bio}/pb-assembly:0.0.8--0"
				memory = 500.GB
				cpus = 48
				time = '5d'
				queue = 'bigmem'
			}
			withName: mummer {
				container = "${params.bio}/mummer4:4.0.0rc1--pl526he1b5a44_0"
			}
			withName: transposonpsi {
				container = "${params.bio}/transposonpsi:1.0.0--1"
			}
			withName: tetools {
				container = "${params.fog}:dfamtetools-1.2"
			}
			withName: merqury {
				container = "${params.bio}/merqury:1.1--0"
			}
			withName: purge_haplotigs {
				container = "${params.bio}/purge_haplotigs:1.1.1--0"
			}
			withName: assembly_stats {
				memory = 5.GB
				cpus = 2
				time = '1h'
				queue = 'quicktest'
			}
		}
	}
}

/*
#replaced by pbmm2
	withName: 'minimap2.*' {
		container = "${params.bio}/minimap2:2.17--hed695b0_3"
	}


			//polishing
			racon
			nextpolish

			//phasing + varcalling
			only use pipeline DipAsm
			1) Peregrine (un-phased contigs)
			2) HiRise (un-phased scaffolds) //phasing
			falcon-phase
			Allhic
			MarginPhase

			3) DeepV (Map HiFi reads to scaffolds and call SNPs)
			HaploTypo
			4) WhatsHap + HapCUT2 (Phase SNPs)
			5) WhatsHap (Partition reads based on their phase)
			6) Peregrine (Assemble partitioned reads into phased contigs)

			//polishing after phasing
			purge_haplotigs

			//evaluation
			auN / GAGE
			genomeqc, assembly stats

			//chromosome visualizer
			chromomap app

			//strand-seq
			**https://github.com/daewoooo/StrandPhaseR

			ISOSEQ
			//mapping isoseq3
			pilon

			//isoseq
			withName: isoseq3 {
				container = "${params.biocontainers}/isoseq3:3.4.0--0"
			}
			withName: salsa2 {
				container = 'shub://kiwiepic/FOG:salsa-2.2'
			}

			//alternative transcription initiation
			//alternative splicing
			//alternative cleavage and polyadenylation
			//natural antisence transcripts
			//circular RNA
			prapi

			//Transcriptome Annotation by Modular Algorithms
			TAMA
*/